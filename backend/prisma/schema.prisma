// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  sessions   Session[]
  stats      UserStats?
  dailyStats DailyStats[]

  @@map("users")
}

model Question {
  id         String      @id @default(cuid())
  prompt     String
  components Component[]
  summary    String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  // Relations
  responses Response[]

  @@map("questions")
}

model Component {
  id         String  @id @default(cuid())
  text       String
  correct    Boolean
  explanation String?
  questionId String
  
  // Relations
  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@map("components")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  startedAt DateTime @default(now())
  endedAt   DateTime?
  completed Boolean  @default(false)
  
  // Performance metrics
  totalQuestions Int @default(0)
  correctAnswers Int @default(0)
  totalAttempts  Int @default(0)

  // Relations
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  responses Response[]

  @@map("sessions")
}

model Response {
  id         String   @id @default(cuid())
  sessionId  String
  session   Session  @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  questionId String
  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  selectedComponents String // JSON string of component IDs
  correct    Boolean
  attempts   Int      @default(1)
  timeSpent  Int      // Time in seconds
  createdAt DateTime @default(now())

  @@map("responses")
}

// User Statistics for Analytics Dashboard
model UserStats {
  id     String @id @default(cuid())
  userId String @unique
  
  // Overall Performance Metrics
  totalQuestions    Int @default(0)
  totalCorrect      Int @default(0)
  totalAttempts     Int @default(0)
  accuracy          Float @default(0.0) // Calculated: totalCorrect / totalAttempts
  
  // Streak Tracking
  currentStreak     Int @default(0)     // Current consecutive correct answers
  longestStreak     Int @default(0)     // Best streak ever achieved
  lastStreakDate    DateTime?           // When current streak was last updated
  
  // Timing Analytics
  averageTime       Float @default(0.0) // Average time per question (seconds)
  fastestTime       Int?                // Fastest correct answer (seconds)
  totalTimeSpent    Int @default(0)     // Total time across all questions
  
  // Session Analytics
  totalSessions     Int @default(0)
  completedSessions Int @default(0)
  
  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_stats")
}

// Daily Performance Tracking for Historical Trends
model DailyStats {
  id     String @id @default(cuid())
  userId String
  date   DateTime
  
  // Daily Metrics
  questionsAnswered Int @default(0)
  correctAnswers    Int @default(0)
  totalAttempts     Int @default(0)
  timeSpent         Int @default(0) // Total seconds spent
  sessionsPlayed    Int @default(0)
  
  // Daily Performance
  dailyAccuracy     Float @default(0.0)
  averageTimePerQ   Float @default(0.0)
  
  // Streak on this day
  streakAtEndOfDay  Int @default(0)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId, date])
  @@map("daily_stats")
}
